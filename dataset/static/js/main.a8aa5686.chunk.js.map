{"version":3,"sources":["reportWebVitals.js","index.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","clone","object","JSON","parse","stringify","DataSet","arrData","this","data","pendingData","i","length","colInx","rowCount","selectCol","keyArray","newData","key","addCol","addKey","val","j","push","orderBy","orderKey","array","keys","Object","inx","indexOf","map","columnArr","sortMap","targetArr","sort","x","y","result","posX","poxY","currentArr","defaultArr","React","useState","orgData","setOrgData","forceUpdate","pendingFun","setPendingFun","renderArr","columnCount","rows","len","className","columns","column","onClickRun","dataSet","eval","e","alert","stack","onClick","onChange","target","value","style","textAlign"],"mappings":"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","file":"static/js/main.a8aa5686.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\nimport \"./App.css\";\n\nfunction clone(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n\nfunction DataSet(arrData) {\n  this.data = {};\n  this.pendingData = {};\n  for (let i = 0; i < arrData.length; i++) {\n    this.data[\"column\" + i] = arrData[i];\n  }\n  this.pendingData = clone(this.data);\n  this.colInx = arrData.length;\n  this.rowCount = arrData[0].length;\n\n  // avalable actions;\n  this.selectCol = (keyArray) => {\n    const newData = {};\n    for (let i = 0; i < keyArray.length; i++) {\n      const key = keyArray[i];\n      if (this.pendingData[key]) {\n        newData[key] = this.pendingData[key];\n      }\n    }\n    this.pendingData = newData;\n    return this;\n  };\n\n  this.addCol = (keyArray) => {\n    const addKey = \"column\" + this.colInx;\n    this.colInx++;\n    this.pendingData[addKey] = [];\n    for (let i = 0; i < this.rowCount; i++) {\n      let val;\n      for (let j = 0; j < keyArray.length; j++) {\n        if (j === 0) {\n          val = this.pendingData[keyArray[j]][i];\n        } else {\n          val = this.pendingData[keyArray[j]][i] + val;\n        }\n      }\n      this.pendingData[addKey].push(val);\n    }\n    return this;\n  };\n\n  this.orderBy = (orderKey) => {\n    const array = [];\n    const keys = Object.keys(this.pendingData);\n    const inx = keys.indexOf(orderKey);\n    keys.map((key) => {\n      const columnArr = this.pendingData[key];\n      array.push([...columnArr]);\n    });\n    const sortMap = {};\n    const targetArr = array[inx];\n\n    targetArr.sort((x, y) => {\n      const result = y - x;\n      const posX = targetArr.indexOf(x);\n      const poxY = targetArr.indexOf(y);\n      sortMap[posX + \"_\" + poxY] = result;\n      return result;\n    });\n\n    for (let i = 0; i < array.length; i++) {\n      if (i !== inx) {\n        const currentArr = array[i];\n        currentArr.sort((x, y) => {\n          const posX = currentArr.indexOf(x);\n          const poxY = currentArr.indexOf(y);\n          return sortMap[posX + \"_\" + poxY];\n        });\n      }\n    }\n\n    for (let i = 0; i < array.length; i++) {\n      this.pendingData[keys[i]] = array[i];\n    }\n  };\n\n  return this;\n}\n\nconst defaultArr = [\n  [1, 3, 5, 7, 9, 11],\n  [2, 4, 6, 8, 12, 10],\n  [1, 2, 3, 4, 5, 6],\n  [6, 5, 4, 3, 2, 1],\n  [\"name1\", \"name2\", \"name3\", \"name4\", \"name5\", \"name6\"],\n  [15, 15, 16, 16, 17, 17],\n];\n\nfunction App() {\n  const [orgData, setOrgData] = React.useState(new DataSet(defaultArr));\n  const [, forceUpdate] = React.useState();\n  const [pendingFun, setPendingFun] = React.useState(\n    \"dataSet.orderBy('column1')\"\n  );\n  const renderArr = (data) => {\n    const keys = Object.keys(data);\n    const columnCount = keys.length;\n    const rowCount = data && keys && keys.length > 0 ? data[keys[0]].length : 0;\n    const rows = [];\n    let i = 0;\n    const len = rowCount;\n    while (i < len) {\n      rows.push(i);\n      i++;\n    }\n\n    return (\n      <div className=\"arrWrap\">\n        <div className=\"arrHeaderWrap\">\n          {keys.map((key) => {\n            return (\n              <div className=\"arrHeaderItem\" key={key}>\n                {key}\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"arrContentWrap\">\n          {rows.map((inx) => {\n            const columns = [];\n            let i = 0;\n            const len = columnCount;\n            while (i < len) {\n              columns.push(i);\n              i++;\n            }\n            return (\n              <div className=\"arrContentRowItem\" key={\"row\" + inx}>\n                {columns.map((column) => {\n                  return (\n                    <div className=\"arrContentColItem\" key={column}>\n                      {data[keys[column]][inx]}\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  };\n\n  const onClickRun = () => {\n    (function () {\n      try {\n        const dataSet = orgData;\n        eval(pendingFun);\n      } catch (e) {\n        alert(e.stack);\n      }\n    })();\n    forceUpdate({});\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrap\">\n        <div className=\"orgWrap\">{renderArr(orgData.data)}</div>\n        <div className=\"actionWrap\">\n          <div>\n            <button\n              className=\"actionBtn\"\n              onClick={() => {\n                setPendingFun(\"dataSet.orderBy('column1');\");\n              }}\n            >\n              Order By\n            </button>\n\n            <button\n              className=\"actionBtn\"\n              onClick={() => {\n                setPendingFun(\"dataSet.addCol(['column1','column2']);\");\n              }}\n            >\n              Add\n            </button>\n\n            <button\n              className=\"actionBtn\"\n              onClick={() => {\n                setPendingFun(\"dataSet.selectCol(['column1','column6']);\");\n              }}\n            >\n              Select\n            </button>\n\n            <button\n              className=\"actionBtn\"\n              onClick={() => {\n                setPendingFun(\n                  \"dataSet.addCol(['column0','column1','column2']);\\ndataSet.selectCol(['column0','column6']);\\n\"\n                );\n              }}\n            >\n              Mutiple Action\n            </button>\n          </div>\n          <textarea\n            onChange={(e) => {\n              setPendingFun(e.target.value);\n            }}\n            className=\"funArea\"\n            value={pendingFun}\n          ></textarea>\n          <button className=\"runBtn\" onClick={onClickRun}>\n            Run\n          </button>\n          <button\n            className=\"runBtn\"\n            onClick={() => {\n              orgData.pendingData = clone(orgData.data);\n              forceUpdate({});\n            }}\n          >\n            Reset\n          </button>\n        </div>\n        <div className=\"targetWrap\">{renderArr(orgData.pendingData)}</div>\n      </div>\n\n      <div className=\"role\">\n        <h3 style={{ textAlign: \"left\" }}>实现逻辑</h3>\n        <ul style={{ textAlign: \"left\" }}>\n          <li>\n            1, 定义构建函数function DataSet(arrData),\n            实现数据库数据（二维数组）到JS对象的转换\n          </li>\n          <li>\n            2, 实现预先设置好的方法，比如 selectCol(), addCol(), orderBy()等\n          </li>\n          <li>\n            3,\n            用户或者前线工作人员，自定义数据操作时只需要直接调用预设方法，不需要写复杂的数据库语句，也不需要解析，比如\n            <pre className=\"pre\">\n              dataSet.selectCol(['column0','column1']);\n              dataSet.addCol(['column0','column1']); dataSet.orderBy('column0');\n            </pre>\n          </li>\n        </ul>\n        <h4 style={{ textAlign: \"left\" }}>DataSet 实现</h4>\n        <div style={{ textAlign: \"left\" }}>\n          <pre>\n            {`\n             function DataSet(arrData) {\n                this.data = {};\n                this.pendingData = {};\n                for (let i = 0; i < arrData.length; i++) {\n                  this.data[\"column\" + i] = arrData[i];\n                }\n                this.pendingData = clone(this.data);\n                this.colInx = arrData.length;\n                this.rowCount = arrData[0].length;\n\n\n                // avalable actions;\n\n                this.selectCol = (keyArray) => {\n                  const newData = {};\n                  for (let i = 0; i < keyArray.length; i++) {\n                    const key = keyArray[i];\n                    if (this.pendingData[key]) {\n                      newData[key] = this.pendingData[key];\n                    }\n                  }\n                  this.pendingData = newData;\n                  return this;\n                };\n\n                this.addCol = (keyArray) => {\n                  const addKey = \"column\" + this.colInx;\n                  this.colInx++;\n                  this.pendingData[addKey] = [];\n                  for (let i = 0; i < this.rowCount; i++) {\n                    let val;\n                    for (let j = 0; j < keyArray.length; j++) {\n                      if (j === 0) {\n                        val = this.pendingData[keyArray[j]][i];\n                      } else {\n                        val = this.pendingData[keyArray[j]][i] + val;\n                      }\n                    }\n                    this.pendingData[addKey].push(val);\n                  }\n                  return this;\n                };\n\n                this.orderBy = (orderKey) => {\n                  ...\n                };\n\n                return this;\n              }\n              `}\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}