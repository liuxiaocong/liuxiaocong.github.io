(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,function(e){e.exports={Admiralty:{NS:10},Aljunied:{EW:9},"Ang Mo Kio":{NS:16},"Bahar Junction":{JS:7},Bakau:{SE:3},Bangkit:{BP:9},Bartley:{CC:12,CE:12},Bayfront:{CE:3,DT:16},Bayshore:{TE:29},"Beauty World":{DT:5},Bedok:{EW:5},"Bedok North":{DT:29},"Bedok Reservoir":{DT:30},"Bedok South":{TE:30},Bencoolen:{DT:21},Bendemeer:{DT:23},Bishan:{NS:17,CC:15,CE:15},"Boon Keng":{NE:9},"Boon Lay":{EW:27,JS:8},"Botanic Gardens":{CC:19,CE:19,DT:9},Braddell:{NS:18},"Bras Basah":{CC:2},"Bright Hill":{TE:7},Buangkok:{NE:15},Bugis:{EW:12,DT:14},"Bukit Batok":{NS:2},"Bukit Batok West":{JE:3},"Bukit Gombak":{NS:3},"Bukit Panjang":{BP:[6,14],DT:1},"Buona Vista":{EW:21,CC:22,CE:22},Caldecott:{CC:17,CE:17,TE:9},Canberra:{NS:12},Cantonment:{CC:31,CE:31},Cashew:{DT:2},"Changi Airport":{CG:2},"Cheng Lim":{SW:1},Chinatown:{NE:4,DT:19},"Chinese Garden":{EW:25},"Choa Chu Kang":{NS:4,JS:1,BP:[1,19]},"Choa Chu Kang West":{JS:2},"City Hall":{NS:25,EW:13},"Clarke Quay":{NE:5},Clementi:{EW:23},Commonwealth:{EW:20},Compassvale:{SE:1},"Coral Edge":{PE:3},Corporation:{JS:5},Cove:{PE:1},Dakota:{CC:8,CE:8},Damai:{PE:7},"Dhoby Ghaut":{NS:24,NE:6,CC:1},Dover:{EW:22},Downtown:{DT:17},Enterprise:{JS:9},Esplanade:{CC:3},Eunos:{EW:7},Expo:{CG:1,DT:35},Fajar:{BP:10},Farmway:{SW:2},"Farrer Park":{NE:8},"Farrer Road":{CC:20,CE:20},Fernvale:{SW:5},"Fort Canning":{DT:20},"Gardens by the Bay":{TE:22},"Gek Poh":{JW:1},"Geylang Bahru":{DT:24},"Great World":{TE:15},"Gul Circle":{EW:30},HarbourFront:{NE:1,CC:29,CE:29},Havelock:{TE:16},"Haw Par Villa":{CC:25,CE:25},Hillview:{DT:3},"Holland Village":{CC:21,CE:21},"Hong Kah":{JS:4},Hougang:{NE:14},"Jalan Besar":{DT:22},Jelapang:{BP:12},"Joo Koon":{EW:29},"Jurong East":{NS:1,EW:24,JE:5},"Jurong Hill":{JS:11},"Jurong Pier":{JS:12},"Jurong Town Hall":{JE:6},"Jurong West":{JS:6},Kadaloor:{PE:5},"Kaki Bukit":{DT:28},Kallang:{EW:10},Kangkar:{SE:4},"Katong Park":{TE:24},"Keat Hong":{BP:[3,17]},Kembangan:{EW:6},"Kent Ridge":{CC:24,CE:24},Keppel:{CC:30,CE:30},Khatib:{NS:14},"King Albert Park":{DT:6},Kovan:{NE:13},Kranji:{NS:7},Kupang:{SW:3},"Labrador Park":{CC:27,CE:27},Lakeside:{EW:26},Lavender:{EW:11},Layar:{SW:6},Lentor:{TE:5},"Little India":{NE:7,DT:12},"Lorong Chuan":{CC:14,CE:14},MacPherson:{CC:10,CE:10,DT:26},"Marina Bay":{CE:[2,33],NS:27,TE:20,CC:33},"Marina South":{TE:21},"Marina South Pier":{NS:28},"Marine Parade":{TE:26},"Marine Terrace":{TE:27},Marsiling:{NS:8},Marymount:{CC:16,CE:16},Mattar:{DT:25},Maxwell:{TE:18},Mayflower:{TE:6},Meridian:{PE:2},"Mount Pleasant":{TE:10},Mountbatten:{CC:7,CE:7},"Nanyang Crescent":{JW:4},"Nanyang Gateway":{JW:3},Napier:{TE:12},Newton:{NS:21,DT:11},Nibong:{PW:5},"Nicoll Highway":{CC:5,CE:5},Novena:{NS:20},Oasis:{PE:6},"one-north":{CC:23,CE:23},Orchard:{NS:22,TE:14},"Orchard Boulevard":{TE:13},"Outram Park":{EW:16,NE:3,TE:17},"Pandan Reservoir":{JE:7},"Pasir Panjang":{CC:26,CE:26},"Pasir Ris":{EW:1},"Paya Lebar":{EW:8,CC:9,CE:9},Pending:{BP:8},"Peng Kang Hill":{JW:5},Petir:{BP:7},Phoenix:{BP:[5,15]},Pioneer:{EW:28},"Potong Pasir":{NE:10},"Prince Edward Road":{CC:32,CE:32},Promenade:{CC:4,CE:4,DT:15},Punggol:{NE:17,PE:[0,8],PW:[0,8]},"Punggol Coast":{NE:18},"Punggol Point":{PW:3},Queenstown:{EW:19},"Raffles Place":{NS:26,EW:14},Ranggung:{SE:5},Redhill:{EW:18},Renjong:{SW:8},Riviera:{PE:4},Rochor:{DT:13},Rumbia:{SE:2},"Sam Kee":{PW:1},Samudera:{PW:4},Segar:{BP:11},Sembawang:{NS:11},Sengkang:{NE:16,SE:[0,6],SW:[0,9]},Senja:{BP:13},Serangoon:{NE:12,CC:13,CE:13},"Shenton Way":{TE:19},Siglap:{TE:28},Simei:{EW:3},"Sixth Avenue":{DT:7},Somerset:{NS:23},"Soo Teck":{PW:7},"South View":{BP:[2,18]},Springleaf:{TE:4},Stadium:{CC:6,CE:6},Stevens:{DT:10,TE:11},Sumang:{PW:6},"Sungei Bedok":{DT:37,TE:31},"Tai Seng":{CC:11,CE:11},Tampines:{EW:2,DT:32},"Tampines East":{DT:33},"Tampines West":{DT:31},"Tan Kah Kee":{DT:8},"Tanah Merah":{EW:4,CG:0},"Tanjong Katong":{TE:25},"Tanjong Pagar":{EW:15},"Tanjong Rhu":{TE:23},Tawas:{JW:2},"Teck Lee":{PW:2},"Teck Whye":{BP:[4,16]},"Telok Ayer":{DT:18},"Telok Blangah":{CC:28,CE:28},Tengah:{JS:3},"Tengah Park":{JE:2},"Tengah Plantation":{JE:1},Thanggam:{SW:4},"Tiong Bahru":{EW:17},"Toa Payoh":{NS:19},"Toh Guan":{JE:4},Tongkang:{SW:7},"Tuas Crescent":{EW:31},"Tuas Link":{EW:33},"Tuas West Road":{EW:32},Tukang:{JS:10},Ubi:{DT:27},"Upper Changi":{DT:34},"Upper Thomson":{TE:8},Woodlands:{NS:9,TE:2},"Woodlands North":{TE:1},"Woodlands South":{TE:3},Woodleigh:{NE:11},Xilin:{DT:36},"Yew Tee":{NS:5},"Yio Chu Kang":{NS:15},Yishun:{NS:13}}},,,,,,,,,function(e,a,t){e.exports=t(20)},,,,,function(e,a,t){},,function(e,a,t){},function(e,a,t){},function(e,a,t){"use strict";t.r(a);var n=t(0),i=t.n(n),o=t(5),r=t.n(o),s=(t(16),t(6)),l=t(7),h=t(9),c=t(8),m=t(10),u=t(1),g=t.n(u),E=(t(18),function(e){var a=e.source,t=e.showAutoComplete,n=e.value,o=e.onChange,r=(e.onHasError,[]),s=!1;if(n){0===(r=g.a.filter(a,function(e){return e.toLowerCase().indexOf(n.toLowerCase())>=0})).length&&(s=!0);for(var l=0;l<a.length;l++)a[l]===n?(r=[],s=!1):a[l].toLowerCase()===n.toLowerCase()&&(r=[],s=!1,o(a[l]))}return i.a.createElement("div",{className:t&&r.length>0?"auto-complete-wrap auto-complete-wrap-up":"auto-complete-wrap"},i.a.createElement("input",{className:"input-item",value:n,onChange:function(e){o(e.target.value)}}),i.a.createElement("div",{className:t&&r.length>0?"complete-wrap":"complete-none"},i.a.createElement("ul",{className:"suggestion-wrap"},r.map(function(e,a){return i.a.createElement("li",{key:"_".concat(a),onClick:function(){o(e)},className:"suggestion-item"},e)}))),i.a.createElement("div",{className:s?"has-error-wrap":"has-error-none"},"Please input correct station"))}),C=!0,d=C,p=500;function T(e){d&&console.log(e)}function N(e){var a=[];for(var t in e)a.push(t);return a}function v(e,a){for(var t={vertexes:{},totalCount:0},n=function(n){for(var i=[],o=a[n].name,r=a[n].connectedLines,s=function(t){var n=r[t],s=g.a.filter(a,function(e){return e.connectedLines.indexOf(n)>=0&&e.name!==o}),l=e[o][n],h=p,c=p;if(0===s.length)return"continue";for(var m=s[0].name,u=s[0].name,E=0;E<s.length;E++){var C=s[E].name,d=e[C][n],T=S(l,d).currentPosition;if((d=S(T,d).targetPosition)>T){var N=d-T;N<c&&(c=N,u=C)}else{var v=T-d;v<h&&(h=v,m=C)}}h!==p&&i.push({lineName:n,name:m,weight:h}),c!==p&&i.push({lineName:n,name:u,weight:c})},l=0;l<r.length;l++)s(l);t.vertexes[a[n].name]={},t.vertexes[a[n].name].lines=i,t.totalCount++},i=0;i<a.length;i++)n(i);return console.log(t),t}function S(e,a){var t={};if(Array.isArray(e)||(t.currentPosition=e),Array.isArray(a)||(t.targetPosition=a),Array.isArray(e)&&(t.currentPosition=e[0]),Array.isArray(a)&&(t.targetPosition=a[0]),Array.isArray(e)||Array.isArray(a)){for(var n=[].concat(e),i=[].concat(a),o=n[0],r=i[0],s=p,l=0;l<n.length;l++)for(var h=0;h<i.length;h++){var c=Math.abs(n[l]-i[h]);c<s&&(o=n[l],r=i[h],s=c)}t.currentPosition=o,t.targetPosition=r}return t}function f(e,a,t,n,i){T("findWay >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"),T("start:"+n),T("end:"+i);var o=a,r=t,s=r.vertexes;s[n]&&s[i]||(s[n]||o.push({name:n,isLineVertex:!0,connectedLines:N(e[n])}),s[i]||o.push({name:i,isLineVertex:!0,connectedLines:N(e[i])}),s=(r=v(e,o)).vertexes);var l=r.totalCount,h={};for(var c in s)c!==s[n]&&(h[c]={weight:p,path:[]});for(var m=[],u=s[n].lines,g=0;g<u.length;g++){var E=u[g];E.weight<h[E.name].weight&&(h[E.name].weight=E.weight,h[E.name].path=[{stationName:n,lineName:E.lineName}].concat({stationName:E.name,lineName:E.lineName}))}for(var C=1;C<l;C++){var d=p,S=null;for(var f in h)m.indexOf(f)<0&&d>=h[f].weight&&(d=h[f].weight,S=f);if(S){m.push(S);for(var w=s[S].lines,W=0;W<w.length;W++){var y=w[W];y.weight+d<h[y.name].weight&&(h[y.name].weight=y.weight+d,h[y.name].path=h[S].path.concat({stationName:y.name,lineName:y.lineName}))}}}return T("least distance map"),T(h),T("target path"),T(h[i]),h[i].stationChangeTimes=P(h[i].path),h[i]}function P(e){for(var a=e[0].lineName,t=0,n=1;n<e.length;n++){var i=e[n];i.lineName!==a&&(t++,a=i.lineName)}return t}var w=t(2),W=(t(19),C),y=function(e){function a(e){var t;return Object(s.a)(this,a),(t=Object(h.a)(this,Object(c.a)(a).call(this,e))).state=Object.assign({startStation:"Jurong East",endStation:"Chinatown",displayPath:[],searchEnable:!1,selectedOption:"0"},function(e){var a=[],t=[],n={},i={},o=[];for(var r in e){t.push(r);var s=e[r],l=[];for(var h in s){i[h]||(i[h]={}),l.push(h),n[h]||(n[h]=[]);var c=s[h];if(Array.isArray(c)){a.indexOf(h)<0&&a.push(h);for(var m=0;m<c.length;m++)n[h].push({name:r,value:c[m]})}else n[h].push({name:r,value:c})}if(l.length>1){o.push({name:r,isLineVertex:!1,connectedLines:l});for(var u=0;u<l.length;u++){var E=l[u],C=l.slice();C.splice(C.indexOf(E),1);for(var d=0;d<C.length;d++){var p=C[d];i[E][p]||(i[E][p]=[]),i[E][p].push(r)}}}}var S=function(a){n[a].sort(function(e,a){return e.value-a.value});var t=n[a].length;g.a.find(o,function(e){return e.name===n[a][0].name})||o.push({name:n[a][0].name,isLineVertex:!0,connectedLines:N(e[n[a][0].name])}),g.a.find(o,function(e){return e.name===n[a][t-1].name})||o.push({name:n[a][t-1].name,isLineVertex:!0,connectedLines:N(e[n[a][t-1].name])})};for(var f in n)S(f);var P={stationNames:t,graph:v(e,o),circleLineNames:a,lineChangeMap:i,lines:n,stationVertexes:o};return T("init map data >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"),T("lines : store all line with station in order"),T("stationNames: all the station names, user for name map and auto complete"),T("circleLineNames: all circle line name"),T("lineChangeMap: all station enable line A change to line B"),T("graph: base graph, only store station with different line pass"),T("stationVertexes: base vertexes, station can direct go to which line"),T(P),P}(w)),t}return Object(m.a)(a,e),Object(l.a)(a,[{key:"componentDidMount",value:function(){this.detectSearchEnable(this.state.startStation,this.state.endStation)}},{key:"componentDidUpdate",value:function(e,a,t){}},{key:"render",value:function(){var e=this;return i.a.createElement("div",{className:"wrap"},i.a.createElement("h2",{className:"welcome"},"Thanks you using SG MRT"),i.a.createElement("div",{className:"input-wrap"},i.a.createElement("span",{className:"label"},"Start Station:"),i.a.createElement(E,{value:this.state.startStation,onChange:function(a){e.onStartPositionChange(a)},source:this.state.stationNames,showAutoComplete:!0}),i.a.createElement("span",{className:"separator"}),i.a.createElement("span",{className:"label"},"End Station:"),i.a.createElement(E,{value:this.state.endStation,onChange:function(a){e.onEndPositionChange(a)},source:this.state.stationNames,showAutoComplete:!0})),i.a.createElement("div",{className:"search-wrap"},i.a.createElement("button",{className:"search",onClick:function(){e.doSearch()},disabled:!this.state.searchEnable},"Search"),i.a.createElement("div",{className:"radio-wrap"},i.a.createElement("label",null,i.a.createElement("input",{type:"radio",value:"0",checked:"0"===this.state.selectedOption,onChange:function(a){e.setState({selectedOption:a.target.value})}}),"Least station"),i.a.createElement("label",null,i.a.createElement("input",{type:"radio",value:"1",checked:"1"===this.state.selectedOption,onChange:function(a){e.setState({selectedOption:a.target.value})}}),"Least line change"))),this.state.displayPath.length>0&&i.a.createElement("ul",{className:"result-wrap"},this.state.displayPath.map(function(e,a){return i.a.createElement("li",{key:"r_".concat(a),className:"result-item"},e)})))}},{key:"onStartPositionChange",value:function(e){this.setState({startStation:e}),this.detectSearchEnable(e,this.state.endStation)}},{key:"onEndPositionChange",value:function(e){this.setState({endStation:e}),this.detectSearchEnable(this.state.startStation,e)}},{key:"detectSearchEnable",value:function(e,a){this.state.stationNames.indexOf(e)>=0&&this.state.stationNames.indexOf(a)>=0?this.setState({searchEnable:!0}):this.setState({searchEnable:!1})}},{key:"doSearch",value:function(){if(this.state.searchEnable)if("1"===this.state.selectedOption){var e=function(e,a,t,n,i){T("findLessChangeWay >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"),T("start:"+n),T("end:"+i);var o=a,r=t,s=r.vertexes;s[n]&&s[i]||(s[n]||o.push({name:n,isLineVertex:!0,connectedLines:N(e[n])}),s[i]||o.push({name:i,isLineVertex:!0,connectedLines:N(e[i])}),s=(r=v(e,o)).vertexes);var l=r.totalCount,h={};for(var c in s)c!==s[n]&&(h[c]={weight:p,path:[],stationChangeTimes:p});for(var m=[],u=s[n].lines,g=0;g<u.length;g++){var E=u[g],C=P([{stationName:n,lineName:E.lineName}].concat({stationName:E.name,lineName:E.lineName}));C<h[E.name].stationChangeTimes&&(h[E.name].weight=E.weight,h[E.name].path=[{stationName:n,lineName:E.lineName}].concat({stationName:E.name,lineName:E.lineName,stationChangeTimes:C}),h[E.name].stationChangeTimes=C)}for(var d=1;d<l;d++){var S=p,w=p,W=null;for(var y in h)m.indexOf(y)<0&&w>=h[y].stationChangeTimes&&(w=h[y].stationChangeTimes,W=y,S=h[y].weight);if(W){m.push(W);for(var k=s[W].lines,B=0;B<k.length;B++){var D=k[B],b=P(h[W].path.concat({stationName:D.name,lineName:D.lineName}));(b<h[D.name].stationChangeTimes||b===h[D.name].stationChangeTimes&&D.weight+S<h[D.name].weight)&&(h[D.name].stationChangeTimes=D.stationChangeTimes+S,h[D.name].path=h[W].path.concat({stationName:D.name,lineName:D.lineName}),h[D.name].weight=D.weight+S,h[D.name].stationChangeTimes=b)}}}T("least change map"),T(h),T("target path"),T(h[i]);var L=f(e,a,t,n,i);return L.stationChangeTimes===h[i].stationChangeTimes&&L.weight<h[i].weight?L:h[i]}(w,this.state.stationVertexes,this.state.graph,this.state.startStation,this.state.endStation);this.displayPathToUser(e)}else{var a=f(w,this.state.stationVertexes,this.state.graph,this.state.startStation,this.state.endStation);this.displayPathToUser(a)}}},{key:"displayPathToUser",value:function(e){var a=e.path,t=[];if(!a||0===a.length)return t.push("Sorry, can't find the way to this station, please contact admin to get more support"),void this.setState({displayPath:t});for(var n=a[0].lineName,i=a[0].stationName,o="",r=1;r<a.length;r++){var s=a[r];s.lineName===n?r===a.length-1?t.push("Take ".concat(n," from ").concat(i," to ").concat(s.stationName)):o=s.stationName:(t.push("Take ".concat(n," from ").concat(i," to ").concat(o)),t.push("Change to ".concat(s.lineName)),i=s.stationName,n=s.lineName,r===a.length-1&&t.push("Take ".concat(n," from ").concat(o," to ").concat(s.stationName)))}t.push("Total ".concat(e.weight," station you will pass, and need to change line ").concat(e.stationChangeTimes," times")),this.log(t),this.setState({displayPath:t})}},{key:"log",value:function(e){W&&console.log(e)}}]),a}(n.Component);r.a.render(i.a.createElement(y,null),document.getElementById("root"))}],[[11,1,2]]]);
//# sourceMappingURL=main.5f51473a.chunk.js.map